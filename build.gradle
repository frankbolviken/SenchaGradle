/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'frankbolviken' at 'Sat Aug 03 00:50:30 CEST 2013' with Gradle 1.6
 *
 * This generated file contains an out - commented sample java project
 * to get you started. For a quick start with Gradle have a look at the Java Quickstart
 * chapter in the Gradle Userguide available at /Applications/dev/gradle/docs/userguide/tutorial_java_projects.html
 */

apply plugin: 'war'

projectName = "SenchaGradle" // Must match the name of the Sencha app name

buildNumber = System.properties["buildNumber"] ? System.properties["buildNumber"] : ''
version = System.properties["version"] ? System.properties["version"] + "-" + buildNumber : '0.1-SNAPSHOT' + "-" + buildNumber

senchaEnvironment = System.properties["senchaEnvironment"] ? System.properties["senchaEnvironment"] : 'production'

ext {
    isWindows = org.gradle.internal.os.OperatingSystem.current().windows

    if (!project.hasProperty('serverPath')) {
        if (isWindows) {
            serverPath = ''
        } else {
            serverPath = ''
        }
    }
    
    sonar_jacoco_jar = "${projectDir}/lib/jacocoagent-0.6.0.jar"
}


war {
    manifest {
        attributes("Implementation-Version" : version)
    }

    classpath = fileTree(classpath).exclude('**')

    from 'build/' + projectName + '/' + senchaEnvironment
    include 'index.html', 'all-classes.js', 'resources/'
    exclude '.sass-cache', '*.scss' 

    webXml = file('WEB-INF/web.xml')
}

task sencha(type: Exec) {
    if(isWindows) {
        commandLine 'cmd', '/c', 'sencha', 'app', 'build', senchaEnvironment
    } else {
        commandLine 'sencha', 'app', 'build', senchaEnvironment
    }
}

task deployApplication(type: Copy) {
    from war.archivePath
    into "${serverPath}"
    rename { String filename ->
         return projectName + '.war'
    }
}

task cleanOldDeploy << {
    delete fileTree(serverPath).include(projectName + '.war')
    delete "${serverPath}/" + projectName
}

war.dependsOn sencha

deployApplication.dependsOn cleanOldDeploy